
phase5.o：     文件格式 elf32-i386


Disassembly of section .text:

00000000 <KUjcwEWTkU>:
   0:	55                   	push   %ebp
			0: R_386_NONE	*ABS*
   1:	89 e5                	mov    %esp,%ebp
   3:	83 ec 10             	sub    $0x10,%esp
   6:	c7 45 f5 48 4b 46 45 	movl   $0x45464b48,-0xb(%ebp)
   d:	66 c7 45 f9 56 64    	movw   $0x6456,-0x7(%ebp)
  13:	c6 45 fb 00          	movb   $0x0,-0x5(%ebp)
  17:	c7 45 fc 07 00 00 00 	movl   $0x7,-0x4(%ebp)
  1e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
  22:	78 15                	js     39 <KUjcwEWTkU+0x39>
  24:	8b 45 08             	mov    0x8(%ebp),%eax
  27:	3b 45 fc             	cmp    -0x4(%ebp),%eax
  2a:	7d 0d                	jge    39 <KUjcwEWTkU+0x39>
  2c:	8d 55 f5             	lea    -0xb(%ebp),%edx
  2f:	8b 45 08             	mov    0x8(%ebp),%eax
  32:	01 d0                	add    %edx,%eax
  34:	0f b6 00             	movzbl (%eax),%eax
  37:	eb 05                	jmp    3e <KUjcwEWTkU+0x3e>
  39:	b8 00 00 00 00       	mov    $0x0,%eax
  3e:	c9                   	leave  
  3f:	c3                   	ret    

00000040 <transform_code>:
  40:	55                   	push   %ebp
  41:	89 e5                	mov    %esp,%ebp
  43:	8b 45 0c             	mov    0xc(%ebp),%eax
  46:	8b 04 85 00 00 00 00 	mov    0x0(,%eax,4),%eax
			49: R_386_32	WHtCKc
  4d:	83 e0 07             	and    $0x7,%eax
  50:	83 f8 07             	cmp    $0x7,%eax
  53:	77 74                	ja     c9 <transform_code+0x89>
  55:	8b 04 85 5c 00 00 00 	mov    0x5c(,%eax,4),%eax
			58: R_386_32	.rodata
  5c:	ff e0                	jmp    *%eax
  5e:	f7 55 08             	notl   0x8(%ebp)
  61:	eb 6a                	jmp    cd <transform_code+0x8d>
  63:	8b 45 0c             	mov    0xc(%ebp),%eax
  66:	8b 04 85 00 00 00 00 	mov    0x0(,%eax,4),%eax
			69: R_386_32	WHtCKc
  6d:	83 e0 03             	and    $0x3,%eax
  70:	89 c1                	mov    %eax,%ecx
  72:	d3 7d 08             	sarl   %cl,0x8(%ebp)
  75:	eb 56                	jmp    cd <transform_code+0x8d>
  77:	8b 45 0c             	mov    0xc(%ebp),%eax
  7a:	8b 04 85 00 00 00 00 	mov    0x0(,%eax,4),%eax
			7d: R_386_32	WHtCKc
  81:	f7 d0                	not    %eax
  83:	21 45 08             	and    %eax,0x8(%ebp)
  86:	eb 45                	jmp    cd <transform_code+0x8d>
  88:	8b 45 0c             	mov    0xc(%ebp),%eax
  8b:	8b 04 85 00 00 00 00 	mov    0x0(,%eax,4),%eax
			8e: R_386_32	WHtCKc
  92:	c1 e0 08             	shl    $0x8,%eax
  95:	09 45 08             	or     %eax,0x8(%ebp)
  98:	eb 33                	jmp    cd <transform_code+0x8d>
  9a:	8b 45 0c             	mov    0xc(%ebp),%eax
  9d:	8b 04 85 00 00 00 00 	mov    0x0(,%eax,4),%eax
			a0: R_386_32	WHtCKc
  a4:	31 45 08             	xor    %eax,0x8(%ebp)
  a7:	eb 24                	jmp    cd <transform_code+0x8d>
  a9:	8b 45 0c             	mov    0xc(%ebp),%eax
  ac:	8b 04 85 00 00 00 00 	mov    0x0(,%eax,4),%eax
			af: R_386_32	WHtCKc
  b3:	f7 d0                	not    %eax
  b5:	09 45 08             	or     %eax,0x8(%ebp)
  b8:	eb 13                	jmp    cd <transform_code+0x8d>
  ba:	8b 45 0c             	mov    0xc(%ebp),%eax
  bd:	8b 04 85 00 00 00 00 	mov    0x0(,%eax,4),%eax
			c0: R_386_32	WHtCKc
  c4:	01 45 08             	add    %eax,0x8(%ebp)
  c7:	eb 04                	jmp    cd <transform_code+0x8d>
  c9:	f7 5d 08             	negl   0x8(%ebp)
  cc:	90                   	nop
  cd:	8b 45 08             	mov    0x8(%ebp),%eax
  d0:	5d                   	pop    %ebp
  d1:	c3                   	ret    

000000d2 <generate_code>:
  d2:	55                   	push   %ebp
  d3:	89 e5                	mov    %esp,%ebp
  d5:	83 ec 18             	sub    $0x18,%esp
  d8:	8b 45 08             	mov    0x8(%ebp),%eax
  db:	a3 00 00 00 00       	mov    %eax,0x0
			dc: R_386_32	IHBihm
  e0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  e7:	eb 1d                	jmp    106 <generate_code+0x34>
  e9:	a1 00 00 00 00       	mov    0x0,%eax
			ea: R_386_32	IHBihm
  ee:	8b 55 fc             	mov    -0x4(%ebp),%edx
  f1:	89 54 24 04          	mov    %edx,0x4(%esp)
  f5:	89 04 24             	mov    %eax,(%esp)
  f8:	e8 fc ff ff ff       	call   f9 <generate_code+0x27>
			f9: R_386_PC32	transform_code
  fd:	a3 00 00 00 00       	mov    %eax,0x0
			fe: R_386_32	IHBihm
 102:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 106:	8b 45 fc             	mov    -0x4(%ebp),%eax
 109:	83 f8 0e             	cmp    $0xe,%eax
 10c:	76 db                	jbe    e9 <generate_code+0x17>
 10e:	c9                   	leave  
 10f:	c3                   	ret    

00000110 <encode_1>:
 110:	55                   	push   %ebp
 111:	89 e5                	mov    %esp,%ebp
 113:	83 ec 28             	sub    $0x28,%esp
 116:	8b 45 08             	mov    0x8(%ebp),%eax
 119:	89 04 24             	mov    %eax,(%esp)
 11c:	e8 fc ff ff ff       	call   11d <encode_1+0xd>
			11d: R_386_PC32	strlen
 121:	89 45 f0             	mov    %eax,-0x10(%ebp)
 124:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 12b:	eb 56                	jmp    183 <encode_1+0x73>
 12d:	8b 55 f4             	mov    -0xc(%ebp),%edx
 130:	8b 45 08             	mov    0x8(%ebp),%eax
 133:	01 c2                	add    %eax,%edx
 135:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 138:	8b 45 08             	mov    0x8(%ebp),%eax
 13b:	01 c8                	add    %ecx,%eax
 13d:	0f b6 00             	movzbl (%eax),%eax
 140:	0f be c0             	movsbl %al,%eax
 143:	0f b6 88 00 00 00 00 	movzbl 0x0(%eax),%ecx
			146: R_386_32	YCsRCu
 14a:	a1 00 00 00 00       	mov    0x0,%eax
 14f:	31 c8                	xor    %ecx,%eax
 151:	83 e0 7f             	and    $0x7f,%eax
 154:	88 02                	mov    %al,(%edx)
 156:	8b 55 f4             	mov    -0xc(%ebp),%edx
 159:	8b 45 08             	mov    0x8(%ebp),%eax
 15c:	01 d0                	add    %edx,%eax
 15e:	0f b6 00             	movzbl (%eax),%eax
 161:	3c 1f                	cmp    $0x1f,%al
 163:	7e 0f                	jle    174 <encode_1+0x64>
 165:	8b 55 f4             	mov    -0xc(%ebp),%edx
 168:	8b 45 08             	mov    0x8(%ebp),%eax
 16b:	01 d0                	add    %edx,%eax
 16d:	0f b6 00             	movzbl (%eax),%eax
 170:	3c 7f                	cmp    $0x7f,%al
 172:	75 0b                	jne    17f <encode_1+0x6f>
 174:	8b 55 f4             	mov    -0xc(%ebp),%edx
 177:	8b 45 08             	mov    0x8(%ebp),%eax
 17a:	01 d0                	add    %edx,%eax
 17c:	c6 00 3f             	movb   $0x3f,(%eax)
 17f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 183:	8b 45 f4             	mov    -0xc(%ebp),%eax
 186:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 189:	7c a2                	jl     12d <encode_1+0x1d>
 18b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 18e:	c9                   	leave  
 18f:	c3                   	ret    

00000190 <encode_2>:
 190:	55                   	push   %ebp
 191:	89 e5                	mov    %esp,%ebp
 193:	83 ec 28             	sub    $0x28,%esp
 196:	8b 45 08             	mov    0x8(%ebp),%eax
 199:	89 04 24             	mov    %eax,(%esp)
 19c:	e8 fc ff ff ff       	call   19d <encode_2+0xd>
			19d: R_386_PC32	strlen
 1a1:	89 45 f0             	mov    %eax,-0x10(%ebp)
 1a4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 1ab:	eb 56                	jmp    203 <encode_2+0x73>
 1ad:	8b 55 f4             	mov    -0xc(%ebp),%edx
 1b0:	8b 45 08             	mov    0x8(%ebp),%eax
 1b3:	01 c2                	add    %eax,%edx
 1b5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 1b8:	8b 45 08             	mov    0x8(%ebp),%eax
 1bb:	01 c8                	add    %ecx,%eax
 1bd:	0f b6 00             	movzbl (%eax),%eax
 1c0:	0f be c0             	movsbl %al,%eax
 1c3:	0f b6 88 00 00 00 00 	movzbl 0x0(%eax),%ecx
			1c6: R_386_32	YCsRCu
 1ca:	a1 00 00 00 00       	mov    0x0,%eax
			1cb: R_386_32	IHBihm
 1cf:	01 c8                	add    %ecx,%eax
 1d1:	83 e0 7f             	and    $0x7f,%eax
 1d4:	88 02                	mov    %al,(%edx)
 1d6:	8b 55 f4             	mov    -0xc(%ebp),%edx
 1d9:	8b 45 08             	mov    0x8(%ebp),%eax
 1dc:	01 d0                	add    %edx,%eax
 1de:	0f b6 00             	movzbl (%eax),%eax
 1e1:	3c 1f                	cmp    $0x1f,%al
 1e3:	7e 0f                	jle    1f4 <encode_2+0x64>
 1e5:	8b 55 f4             	mov    -0xc(%ebp),%edx
 1e8:	8b 45 08             	mov    0x8(%ebp),%eax
 1eb:	01 d0                	add    %edx,%eax
 1ed:	0f b6 00             	movzbl (%eax),%eax
 1f0:	3c 7f                	cmp    $0x7f,%al
 1f2:	75 0b                	jne    1ff <encode_2+0x6f>
 1f4:	8b 55 f4             	mov    -0xc(%ebp),%edx
 1f7:	8b 45 08             	mov    0x8(%ebp),%eax
 1fa:	01 d0                	add    %edx,%eax
 1fc:	c6 00 2a             	movb   $0x2a,(%eax)
 1ff:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 203:	8b 45 f4             	mov    -0xc(%ebp),%eax
 206:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 209:	7c a2                	jl     1ad <encode_2+0x1d>
 20b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 20e:	c9                   	leave  
 20f:	c3                   	ret    

00000210 <do_phase>:
 210:	55                   	push   %ebp
 211:	89 e5                	mov    %esp,%ebp
 213:	83 ec 18             	sub    $0x18,%esp
 216:	c7 04 24 da 00 00 00 	movl   $0xda,(%esp)
 21d:	e8 fc ff ff ff       	call   21e <do_phase+0xe>
			21e: R_386_PC32	generate_code
 222:	a1 04 00 00 00       	mov    0x4,%eax
			223: R_386_32	encoder
 227:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
			22a: R_386_32	gyFtXcaH
 22e:	ff d0                	call   *%eax
 230:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
			233: R_386_32	gyFtXcaH
 237:	e8 fc ff ff ff       	call   238 <do_phase+0x28>
			238: R_386_PC32	puts
 23c:	c9                   	leave  
 23d:	c3                   	ret    

Disassembly of section .data:

00000000 <gkDAGb>:
   0:	ea bf b8 a5 4b 98 cc 	ljmp   $0xcc98,$0x4ba5b8bf
   7:	de 81 b4 e6 9f 6e    	fiadds 0x6e9fe6b4(%ecx)
   d:	3c e5                	cmp    $0xe5,%al
   f:	18 ca                	sbb    %cl,%dl
  11:	8b 6d 66             	mov    0x66(%ebp),%ebp
  14:	dd 74 f7 58          	fnsave 0x58(%edi,%esi,8)
  18:	12 f8                	adc    %al,%bh
  1a:	3d e0 f8 03 09       	cmp    $0x903f8e0,%eax
  1f:	cb                   	lret   
  20:	60                   	pusha  
  21:	2d 3b 33 58 0c       	sub    $0xc58333b,%eax
  26:	c1 7c d9 e0 bd       	sarl   $0xbd,-0x20(%ecx,%ebx,8)
  2b:	a9 12 48 4a 12       	test   $0x124a4812,%eax
  30:	5a                   	pop    %edx
  31:	86 e9                	xchg   %ch,%cl
  33:	7a c3                	jp     fffffff8 <do_phase+0xfffffde8>
  35:	6b 26 20             	imul   $0x20,(%esi),%esp
  38:	95                   	xchg   %eax,%ebp
  39:	d3 4b 54             	rorl   %cl,0x54(%ebx)
  3c:	18 2e                	sbb    %ch,(%esi)
  3e:	8b 3e                	mov    (%esi),%edi
  40:	9c                   	pushf  
  41:	01 36                	add    %esi,(%esi)
  43:	36 ef                	ss out %eax,(%dx)
  45:	31 b3 df 26 4f a3    	xor    %esi,-0x5cb0d921(%ebx)
  4b:	2a 54 25 e4          	sub    -0x1c(%ebp,%eiz,1),%dl
  4f:	22 80 84 ff 99 a7    	and    -0x5866007c(%eax),%al
  55:	c6                   	(bad)  
  56:	8c c5                	mov    %es,%ebp
  58:	b4 88                	mov    $0x88,%ah
  5a:	79 04                	jns    60 <gkDAGb+0x60>
  5c:	0f d9 2d 6f 1a ba 0e 	psubusw 0xeba1a6f,%mm5
  63:	33 19                	xor    (%ecx),%ebx
  65:	a0 31 a2 87 8b       	mov    0x8b87a231,%al
  6a:	7a 85                	jp     fffffff1 <do_phase+0xfffffde1>
  6c:	18 64 82 d2          	sbb    %ah,-0x2e(%edx,%eax,4)
  70:	95                   	xchg   %eax,%ebp
  71:	0c e4                	or     $0xe4,%al
  73:	60                   	pusha  
  74:	14 cb                	adc    $0xcb,%al
  76:	85 b7 98 57 1c 86    	test   %esi,-0x79e3a868(%edi)
  7c:	38 df                	cmp    %bl,%bh
  7e:	3b 61 b8             	cmp    -0x48(%ecx),%esp
  81:	12 60 a8             	adc    -0x58(%eax),%ah
  84:	34 0c                	xor    $0xc,%al
  86:	b7 d3                	mov    $0xd3,%bh
  88:	7e 14                	jle    9e <gkDAGb+0x9e>
  8a:	f1                   	icebp  
  8b:	6d                   	insl   (%dx),%es:(%edi)
  8c:	bf 7a 0d 79 21       	mov    $0x21790d7a,%edi
  91:	63 8e 95 53 bd 15    	arpl   %cx,0x15bd5395(%esi)
  97:	20 c6                	and    %al,%dh
  99:	75 8b                	jne    26 <gkDAGb+0x26>
  9b:	7d 64                	jge    101 <IHBihm+0x1>
  9d:	e5 8c                	in     $0x8c,%eax
  9f:	1b 50 7e             	sbb    0x7e(%eax),%edx
  a2:	51                   	push   %ecx
  a3:	82 65 14 97          	andb   $0x97,0x14(%ebp)
  a7:	de e0                	fsubp  %st,%st(0)
  a9:	78 e1                	js     8c <gkDAGb+0x8c>
  ab:	f0 46                	lock inc %esi
  ad:	61                   	popa   
  ae:	05 e3 00 2b 7c       	add    $0x7c2b00e3,%eax
  b3:	cb                   	lret   
  b4:	21 11                	and    %edx,(%ecx)
  b6:	bc a1 9d 5d ee       	mov    $0xee5d9da1,%esp
  bb:	4c                   	dec    %esp
  bc:	dd c9                	(bad)  
  be:	35 ec 03 11 4f       	xor    $0x4f1103ec,%eax
  c3:	99                   	cltd   
  c4:	bc 76 40 43 65       	mov    $0x65434076,%esp
  c9:	e2 e8                	loop   b3 <gkDAGb+0xb3>
  cb:	e2 07                	loop   d4 <gkDAGb+0xd4>
  cd:	58                   	pop    %eax
  ce:	45                   	inc    %ebp
  cf:	a2 6b 9a 0c c7       	mov    %al,0xc70c9a6b
  d4:	a4                   	movsb  %ds:(%esi),%es:(%edi)
  d5:	a3 f2 50 08 4e       	mov    %eax,0x4e0850f2
  da:	18 92 9a 31 1b 0e    	sbb    %dl,0xe1b319a(%edx)
  e0:	bc 21 27 a9 db       	mov    $0xdba92721,%esp
  e5:	ae                   	scas   %es:(%edi),%al
  e6:	55                   	push   %ebp
  e7:	dc f6                	fdiv   %st,%st(6)
  e9:	55                   	push   %ebp
  ea:	58                   	pop    %eax
  eb:	82 04 c7 00          	addb   $0x0,(%edi,%eax,8)
	...

000000f0 <phase_id>:
  f0:	00 00                	add    %al,(%eax)
			f0: R_386_32	.rodata
	...

000000f4 <gyFtXcaH>:
  f4:	32 32                	xor    (%edx),%dh
  f6:	31 32                	xor    %esi,(%edx)
  f8:	32 30                	xor    (%eax),%dh
  fa:	31 33                	xor    %esi,(%ebx)
  fc:	32 00                	xor    (%eax),%al
	...

00000100 <IHBihm>:
 100:	ff                   	(bad)  
 101:	ff                   	(bad)  
 102:	ff                   	(bad)  
 103:	ff                 	incl   (%eax)
			104: R_386_32	encode_1

00000104 <encoder>:
	...
			108: R_386_32	encode_2

0000010c <phase>:
 10c:	00 00                	add    %al,(%eax)
			10c: R_386_32	do_phase
	...

Disassembly of section .rodata:

00000000 <WHtCKc-0x20>:
   0:	35 00 00 00 00       	xor    $0x0,%eax
	...

00000020 <WHtCKc>:
  20:	39 f5                	cmp    %esi,%ebp
  22:	ff                   	(bad)  
  23:	ff f0                	push   %eax
  25:	2e 00 00             	add    %al,%cs:(%eax)
  28:	d1 51 00             	rcll   0x0(%ecx)
  2b:	00 b4 37 00 00 ca 2f 	add    %dh,0x2fca0000(%edi,%esi,1)
  32:	00 00                	add    %al,(%eax)
  34:	5f                   	pop    %edi
  35:	04 00                	add    $0x0,%al
  37:	00 35 16 00 00 cd    	add    %dh,0xcd000016
  3d:	b4 ff                	mov    $0xff,%ah
  3f:	ff 20                	jmp    *(%eax)
  41:	d0 ff                	sar    %bh
  43:	ff c1                	inc    %ecx
  45:	ba ff ff 41 70       	mov    $0x7041ffff,%edx
  4a:	00 00                	add    %al,(%eax)
  4c:	b7 a1                	mov    $0xa1,%bh
  4e:	ff                   	(bad)  
  4f:	ff 30                	pushl  (%eax)
  51:	95                   	xchg   %eax,%ebp
  52:	ff                   	(bad)  
  53:	ff 28                	ljmp   *(%eax)
  55:	6f                   	outsl  %ds:(%esi),(%dx)
  56:	00 00                	add    %al,(%eax)
  58:	5b                   	pop    %ebx
  59:	47                   	inc    %edi
  5a:	00 00                	add    %al,(%eax)
  5c:	5e                   	pop    %esi
			5c: R_386_32	.text
  5d:	00 00                	add    %al,(%eax)
  5f:	00 63 00             	add    %ah,0x0(%ebx)
			60: R_386_32	.text
  62:	00 00                	add    %al,(%eax)
  64:	77 00                	ja     66 <WHtCKc+0x46>
			64: R_386_32	.text
  66:	00 00                	add    %al,(%eax)
  68:	c9                   	leave  
			68: R_386_32	.text
  69:	00 00                	add    %al,(%eax)
  6b:	00 88 00 00 00 9a    	add    %cl,-0x66000000(%eax)
			6c: R_386_32	.text
			70: R_386_32	.text
  71:	00 00                	add    %al,(%eax)
  73:	00 a9 00 00 00 ba    	add    %ch,-0x46000000(%ecx)
			74: R_386_32	.text
			78: R_386_32	.text
  79:	00 00                	add    %al,(%eax)
  7b:	00 00                	add    %al,(%eax)
  7d:	00 00                	add    %al,(%eax)
	...

00000080 <YCsRCu>:
  80:	00 01                	add    %al,(%ecx)
  82:	02 03                	add    (%ebx),%al
  84:	04 05                	add    $0x5,%al
  86:	06                   	push   %es
  87:	07                   	pop    %es
  88:	08 09                	or     %cl,(%ecx)
  8a:	0a 0b                	or     (%ebx),%cl
  8c:	0c 0d                	or     $0xd,%al
  8e:	0e                   	push   %cs
  8f:	0f 10 11             	movups (%ecx),%xmm2
  92:	12 13                	adc    (%ebx),%dl
  94:	14 15                	adc    $0x15,%al
  96:	16                   	push   %ss
  97:	17                   	pop    %ss
  98:	18 19                	sbb    %bl,(%ecx)
  9a:	1a 1b                	sbb    (%ebx),%bl
  9c:	1c 1d                	sbb    $0x1d,%al
  9e:	1e                   	push   %ds
  9f:	1f                   	pop    %ds
  a0:	58                   	pop    %eax
  a1:	7a 20                	jp     c3 <YCsRCu+0x43>
  a3:	6a 6e                	push   $0x6e
  a5:	53                   	push   %ebx
  a6:	38 41 6f             	cmp    %al,0x6f(%ecx)
  a9:	57                   	push   %edi
  aa:	22 3b                	and    (%ebx),%bh
  ac:	48                   	dec    %eax
  ad:	68 47 28 37 2b       	push   $0x2b372847
  b2:	5b                   	pop    %ebx
  b3:	4a                   	dec    %edx
  b4:	7e 4f                	jle    105 <encoder+0x1>
  b6:	67 39 26 6b 46       	cmp    %esp,0x466b
  bb:	4e                   	dec    %esi
  bc:	60                   	pusha  
  bd:	42                   	inc    %edx
  be:	27                   	daa    
  bf:	5e                   	pop    %esi
  c0:	21 33                	and    %esi,(%ebx)
  c2:	64 61                	fs popa 
  c4:	74 4b                	je     111 <encode_1+0x1>
  c6:	7c 69                	jl     131 <encode_1+0x21>
  c8:	71 29                	jno    f3 <YCsRCu+0x73>
  ca:	56                   	push   %esi
  cb:	7d 65                	jge    132 <encode_1+0x22>
  cd:	52                   	push   %edx
  ce:	4c                   	dec    %esp
  cf:	73 3a                	jae    10b <encoder+0x7>
  d1:	5a                   	pop    %edx
  d2:	4d                   	dec    %ebp
  d3:	6d                   	insl   (%dx),%es:(%edi)
  d4:	5c                   	pop    %esp
  d5:	76 45                	jbe    11c <encode_1+0xc>
  d7:	25 59 62 3f 5d       	and    $0x5d3f6259,%eax
  dc:	34 3d                	xor    $0x3d,%al
  de:	35 72 3c 2f 77       	xor    $0x772f3c72,%eax
  e3:	43                   	inc    %ebx
  e4:	6c                   	insb   (%dx),%es:(%edi)
  e5:	55                   	push   %ebp
  e6:	49                   	dec    %ecx
  e7:	44                   	inc    %esp
  e8:	7b 63                	jnp    14d <encode_1+0x3d>
  ea:	2a 31                	sub    (%ecx),%dh
  ec:	50                   	push   %eax
  ed:	23 78 70             	and    0x70(%eax),%edi
  f0:	75 79                	jne    16b <encode_1+0x5b>
  f2:	40                   	inc    %eax
  f3:	5f                   	pop    %edi
  f4:	2c 54                	sub    $0x54,%al
  f6:	2e 3e 2d 24 36 51 32 	cs ds sub $0x32513624,%eax
  fd:	66                   	data16
  fe:	30                   	.byte 0x30
  ff:	7f                   	.byte 0x7f

Disassembly of section .comment:

00000000 <.comment>:
   0:	00 47 43             	add    %al,0x43(%edi)
   3:	43                   	inc    %ebx
   4:	3a 20                	cmp    (%eax),%ah
   6:	28 47 4e             	sub    %al,0x4e(%edi)
   9:	55                   	push   %ebp
   a:	29 20                	sub    %esp,(%eax)
   c:	34 2e                	xor    $0x2e,%al
   e:	38 2e                	cmp    %ch,(%esi)
  10:	35 20 32 30 31       	xor    $0x31303220,%eax
  15:	35 30 36 32 33       	xor    $0x33323630,%eax
  1a:	20 28                	and    %ch,(%eax)
  1c:	52                   	push   %edx
  1d:	65 64 20 48 61       	gs and %cl,%fs:0x61(%eax)
  22:	74 20                	je     44 <transform_code+0x4>
  24:	34 2e                	xor    $0x2e,%al
  26:	38 2e                	cmp    %ch,(%esi)
  28:	35 2d 34 34 29       	xor    $0x2934342d,%eax
	...

Disassembly of section .eh_frame:

00000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	00 00                	add    %al,(%eax)
   6:	00 00                	add    %al,(%eax)
   8:	01 7a 52             	add    %edi,0x52(%edx)
   b:	00 01                	add    %al,(%ecx)
   d:	7c 08                	jl     17 <.eh_frame+0x17>
   f:	01 1b                	add    %ebx,(%ebx)
  11:	0c 04                	or     $0x4,%al
  13:	04 88                	add    $0x88,%al
  15:	01 00                	add    %eax,(%eax)
  17:	00 1c 00             	add    %bl,(%eax,%eax,1)
  1a:	00 00                	add    %al,(%eax)
  1c:	1c 00                	sbb    $0x0,%al
  1e:	00 00                	add    %al,(%eax)
  20:	00 00                	add    %al,(%eax)
			20: R_386_PC32	.text
  22:	00 00                	add    %al,(%eax)
  24:	40                   	inc    %eax
  25:	00 00                	add    %al,(%eax)
  27:	00 00                	add    %al,(%eax)
  29:	41                   	inc    %ecx
  2a:	0e                   	push   %cs
  2b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  31:	7c c5                	jl     fffffff8 <do_phase+0xfffffde8>
  33:	0c 04                	or     $0x4,%al
  35:	04 00                	add    $0x0,%al
  37:	00 1c 00             	add    %bl,(%eax,%eax,1)
  3a:	00 00                	add    %al,(%eax)
  3c:	3c 00                	cmp    $0x0,%al
  3e:	00 00                	add    %al,(%eax)
  40:	40                   	inc    %eax
			40: R_386_PC32	.text
  41:	00 00                	add    %al,(%eax)
  43:	00 92 00 00 00 00    	add    %dl,0x0(%edx)
  49:	41                   	inc    %ecx
  4a:	0e                   	push   %cs
  4b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  51:	02 8e c5 0c 04 04    	add    0x4040cc5(%esi),%cl
  57:	00 1c 00             	add    %bl,(%eax,%eax,1)
  5a:	00 00                	add    %al,(%eax)
  5c:	5c                   	pop    %esp
  5d:	00 00                	add    %al,(%eax)
  5f:	00 d2                	add    %dl,%dl
			60: R_386_PC32	.text
  61:	00 00                	add    %al,(%eax)
  63:	00 3e                	add    %bh,(%esi)
  65:	00 00                	add    %al,(%eax)
  67:	00 00                	add    %al,(%eax)
  69:	41                   	inc    %ecx
  6a:	0e                   	push   %cs
  6b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  71:	7a c5                	jp     38 <.eh_frame+0x38>
  73:	0c 04                	or     $0x4,%al
  75:	04 00                	add    $0x0,%al
  77:	00 1c 00             	add    %bl,(%eax,%eax,1)
  7a:	00 00                	add    %al,(%eax)
  7c:	7c 00                	jl     7e <.eh_frame+0x7e>
  7e:	00 00                	add    %al,(%eax)
  80:	10 01                	adc    %al,(%ecx)
			80: R_386_PC32	.text
  82:	00 00                	add    %al,(%eax)
  84:	80 00 00             	addb   $0x0,(%eax)
  87:	00 00                	add    %al,(%eax)
  89:	41                   	inc    %ecx
  8a:	0e                   	push   %cs
  8b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  91:	02 7c c5 0c          	add    0xc(%ebp,%eax,8),%bh
  95:	04 04                	add    $0x4,%al
  97:	00 1c 00             	add    %bl,(%eax,%eax,1)
  9a:	00 00                	add    %al,(%eax)
  9c:	9c                   	pushf  
  9d:	00 00                	add    %al,(%eax)
  9f:	00 90 01 00 00 80    	add    %dl,-0x7fffffff(%eax)
			a0: R_386_PC32	.text
  a5:	00 00                	add    %al,(%eax)
  a7:	00 00                	add    %al,(%eax)
  a9:	41                   	inc    %ecx
  aa:	0e                   	push   %cs
  ab:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  b1:	02 7c c5 0c          	add    0xc(%ebp,%eax,8),%bh
  b5:	04 04                	add    $0x4,%al
  b7:	00 1c 00             	add    %bl,(%eax,%eax,1)
  ba:	00 00                	add    %al,(%eax)
  bc:	bc 00 00 00 10       	mov    $0x10000000,%esp
			c0: R_386_PC32	.text
  c1:	02 00                	add    (%eax),%al
  c3:	00 2e                	add    %ch,(%esi)
  c5:	00 00                	add    %al,(%eax)
  c7:	00 00                	add    %al,(%eax)
  c9:	41                   	inc    %ecx
  ca:	0e                   	push   %cs
  cb:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  d1:	6a c5                	push   $0xffffffc5
  d3:	0c 04                	or     $0x4,%al
  d5:	04 00                	add    $0x0,%al
	...
