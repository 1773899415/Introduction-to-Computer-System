
linkbomb4：     文件格式 elf32-i386


Disassembly of section .interp:

08048194 <.interp>:
 8048194:	2f                   	das    
 8048195:	6c                   	insb   (%dx),%es:(%edi)
 8048196:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804819d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 80481a4:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.gnu.build-id:

080481a8 <.note.gnu.build-id>:
 80481a8:	04 00                	add    $0x0,%al
 80481aa:	00 00                	add    %al,(%eax)
 80481ac:	14 00                	adc    $0x0,%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	03 00                	add    (%eax),%eax
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	47                   	inc    %edi
 80481b5:	4e                   	dec    %esi
 80481b6:	55                   	push   %ebp
 80481b7:	00 de                	add    %bl,%dh
 80481b9:	6c                   	insb   (%dx),%es:(%edi)
 80481ba:	db cf                	fcmovne %st(7),%st
 80481bc:	e7 3a                	out    %eax,$0x3a
 80481be:	b4 3e                	mov    $0x3e,%ah
 80481c0:	cb                   	lret   
 80481c1:	38 4d 0c             	cmp    %cl,0xc(%ebp)
 80481c4:	05 0a 4f 33 3c       	add    $0x3c334f0a,%eax
 80481c9:	d8                   	.byte 0xd8
 80481ca:	af                   	scas   %es:(%edi),%eax
 80481cb:	2d                   	.byte 0x2d

Disassembly of section .note.ABI-tag:

080481cc <.note.ABI-tag>:
 80481cc:	04 00                	add    $0x0,%al
 80481ce:	00 00                	add    %al,(%eax)
 80481d0:	10 00                	adc    %al,(%eax)
 80481d2:	00 00                	add    %al,(%eax)
 80481d4:	01 00                	add    %eax,(%eax)
 80481d6:	00 00                	add    %al,(%eax)
 80481d8:	47                   	inc    %edi
 80481d9:	4e                   	dec    %esi
 80481da:	55                   	push   %ebp
 80481db:	00 00                	add    %al,(%eax)
 80481dd:	00 00                	add    %al,(%eax)
 80481df:	00 03                	add    %al,(%ebx)
 80481e1:	00 00                	add    %al,(%eax)
 80481e3:	00 02                	add    %al,(%edx)
 80481e5:	00 00                	add    %al,(%eax)
 80481e7:	00 00                	add    %al,(%eax)
 80481e9:	00 00                	add    %al,(%eax)
	...

Disassembly of section .gnu.hash:

080481ec <.gnu.hash>:
 80481ec:	02 00                	add    (%eax),%al
 80481ee:	00 00                	add    %al,(%eax)
 80481f0:	04 00                	add    $0x0,%al
 80481f2:	00 00                	add    %al,(%eax)
 80481f4:	01 00                	add    %eax,(%eax)
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	05 00 00 00 00       	add    $0x0,%eax
 80481fd:	20 00                	and    %al,(%eax)
 80481ff:	20 00                	and    %al,(%eax)
 8048201:	00 00                	add    %al,(%eax)
 8048203:	00 04 00             	add    %al,(%eax,%eax,1)
 8048206:	00 00                	add    %al,(%eax)
 8048208:	ad                   	lods   %ds:(%esi),%eax
 8048209:	4b                   	dec    %ebx
 804820a:	e3 c0                	jecxz  80481cc <_init-0xe34>

Disassembly of section .dynsym:

0804820c <.dynsym>:
	...
 804821c:	1a 00                	sbb    (%eax),%al
	...
 8048226:	00 00                	add    %al,(%eax)
 8048228:	12 00                	adc    (%eax),%al
 804822a:	00 00                	add    %al,(%eax)
 804822c:	3b 00                	cmp    (%eax),%eax
	...
 8048236:	00 00                	add    %al,(%eax)
 8048238:	20 00                	and    %al,(%eax)
 804823a:	00 00                	add    %al,(%eax)
 804823c:	1f                   	pop    %ds
	...
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 12                	add    %dl,(%edx)
 8048249:	00 00                	add    %al,(%eax)
 804824b:	00 0b                	add    %cl,(%ebx)
 804824d:	00 00                	add    %al,(%eax)
 804824f:	00 04 a0             	add    %al,(%eax,%eiz,4)
 8048252:	04 08                	add    $0x8,%al
 8048254:	04 00                	add    $0x0,%al
 8048256:	00 00                	add    %al,(%eax)
 8048258:	11 00                	adc    %eax,(%eax)
 804825a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804825c <.dynstr>:
 804825c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048260:	63 2e                	arpl   %bp,(%esi)
 8048262:	73 6f                	jae    80482d3 <_init-0xd2d>
 8048264:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048269:	4f                   	dec    %edi
 804826a:	5f                   	pop    %edi
 804826b:	73 74                	jae    80482e1 <_init-0xd1f>
 804826d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048274:	64 
 8048275:	00 70 75             	add    %dh,0x75(%eax)
 8048278:	74 73                	je     80482ed <_init-0xd13>
 804827a:	00 5f 5f             	add    %bl,0x5f(%edi)
 804827d:	6c                   	insb   (%dx),%es:(%edi)
 804827e:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048285:	72 74                	jb     80482fb <_init-0xd05>
 8048287:	5f                   	pop    %edi
 8048288:	6d                   	insl   (%dx),%es:(%edi)
 8048289:	61                   	popa   
 804828a:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 8048291:	43                   	inc    %ebx
 8048292:	5f                   	pop    %edi
 8048293:	32 2e                	xor    (%esi),%ch
 8048295:	30 00                	xor    %al,(%eax)
 8048297:	5f                   	pop    %edi
 8048298:	5f                   	pop    %edi
 8048299:	67 6d                	insl   (%dx),%es:(%di)
 804829b:	6f                   	outsl  %ds:(%esi),(%dx)
 804829c:	6e                   	outsb  %ds:(%esi),(%dx)
 804829d:	5f                   	pop    %edi
 804829e:	73 74                	jae    8048314 <_init-0xcec>
 80482a0:	61                   	popa   
 80482a1:	72 74                	jb     8048317 <_init-0xce9>
 80482a3:	5f                   	pop    %edi
 80482a4:	5f                   	pop    %edi
	...

Disassembly of section .gnu.version:

080482a6 <.gnu.version>:
 80482a6:	00 00                	add    %al,(%eax)
 80482a8:	02 00                	add    (%eax),%al
 80482aa:	00 00                	add    %al,(%eax)
 80482ac:	02 00                	add    (%eax),%al
 80482ae:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

080482b0 <.gnu.version_r>:
 80482b0:	01 00                	add    %eax,(%eax)
 80482b2:	01 00                	add    %eax,(%eax)
 80482b4:	01 00                	add    %eax,(%eax)
 80482b6:	00 00                	add    %al,(%eax)
 80482b8:	10 00                	adc    %al,(%eax)
 80482ba:	00 00                	add    %al,(%eax)
 80482bc:	00 00                	add    %al,(%eax)
 80482be:	00 00                	add    %al,(%eax)
 80482c0:	10 69 69             	adc    %ch,0x69(%ecx)
 80482c3:	0d 00 00 02 00       	or     $0x20000,%eax
 80482c8:	31 00                	xor    %eax,(%eax)
 80482ca:	00 00                	add    %al,(%eax)
 80482cc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080482d0 <.rel.dyn>:
 80482d0:	fc                   	cld    
 80482d1:	bf 04 08 06 02       	mov    $0x2060804,%edi
	...

Disassembly of section .rel.plt:

080482d8 <.rel.plt>:
 80482d8:	0c c0                	or     $0xc0,%al
 80482da:	04 08                	add    $0x8,%al
 80482dc:	07                   	pop    %es
 80482dd:	01 00                	add    %eax,(%eax)
 80482df:	00 10                	add    %dl,(%eax)
 80482e1:	c0 04 08 07          	rolb   $0x7,(%eax,%ecx,1)
 80482e5:	03 00                	add    (%eax),%eax
	...

Disassembly of section .init:

08049000 <_init>:
 8049000:	f3 0f 1e fb          	endbr32 
 8049004:	53                   	push   %ebx
 8049005:	83 ec 08             	sub    $0x8,%esp
 8049008:	e8 a3 00 00 00       	call   80490b0 <__x86.get_pc_thunk.bx>
 804900d:	81 c3 f3 2f 00 00    	add    $0x2ff3,%ebx
 8049013:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8049019:	85 c0                	test   %eax,%eax
 804901b:	74 02                	je     804901f <_init+0x1f>
 804901d:	ff d0                	call   *%eax
 804901f:	83 c4 08             	add    $0x8,%esp
 8049022:	5b                   	pop    %ebx
 8049023:	c3                   	ret    

Disassembly of section .plt:

08049030 <.plt>:
 8049030:	ff 35 04 c0 04 08    	pushl  0x804c004
 8049036:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804903c:	00 00                	add    %al,(%eax)
	...

08049040 <puts@plt>:
 8049040:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 8049046:	68 00 00 00 00       	push   $0x0
 804904b:	e9 e0 ff ff ff       	jmp    8049030 <.plt>

08049050 <__libc_start_main@plt>:
 8049050:	ff 25 10 c0 04 08    	jmp    *0x804c010
 8049056:	68 08 00 00 00       	push   $0x8
 804905b:	e9 d0 ff ff ff       	jmp    8049030 <.plt>

Disassembly of section .text:

08049060 <_start>:
 8049060:	f3 0f 1e fb          	endbr32 
 8049064:	31 ed                	xor    %ebp,%ebp
 8049066:	5e                   	pop    %esi
 8049067:	89 e1                	mov    %esp,%ecx
 8049069:	83 e4 f0             	and    $0xfffffff0,%esp
 804906c:	50                   	push   %eax
 804906d:	54                   	push   %esp
 804906e:	52                   	push   %edx
 804906f:	e8 23 00 00 00       	call   8049097 <_start+0x37>
 8049074:	81 c3 8c 2f 00 00    	add    $0x2f8c,%ebx
 804907a:	8d 83 60 d3 ff ff    	lea    -0x2ca0(%ebx),%eax
 8049080:	50                   	push   %eax
 8049081:	8d 83 f0 d2 ff ff    	lea    -0x2d10(%ebx),%eax
 8049087:	50                   	push   %eax
 8049088:	51                   	push   %ecx
 8049089:	56                   	push   %esi
 804908a:	c7 c0 76 91 04 08    	mov    $0x8049176,%eax
 8049090:	50                   	push   %eax
 8049091:	e8 ba ff ff ff       	call   8049050 <__libc_start_main@plt>
 8049096:	f4                   	hlt    
 8049097:	8b 1c 24             	mov    (%esp),%ebx
 804909a:	c3                   	ret    
 804909b:	66 90                	xchg   %ax,%ax
 804909d:	66 90                	xchg   %ax,%ax
 804909f:	90                   	nop

080490a0 <_dl_relocate_static_pie>:
 80490a0:	f3 0f 1e fb          	endbr32 
 80490a4:	c3                   	ret    
 80490a5:	66 90                	xchg   %ax,%ax
 80490a7:	66 90                	xchg   %ax,%ax
 80490a9:	66 90                	xchg   %ax,%ax
 80490ab:	66 90                	xchg   %ax,%ax
 80490ad:	66 90                	xchg   %ax,%ax
 80490af:	90                   	nop

080490b0 <__x86.get_pc_thunk.bx>:
 80490b0:	8b 1c 24             	mov    (%esp),%ebx
 80490b3:	c3                   	ret    
 80490b4:	66 90                	xchg   %ax,%ax
 80490b6:	66 90                	xchg   %ax,%ax
 80490b8:	66 90                	xchg   %ax,%ax
 80490ba:	66 90                	xchg   %ax,%ax
 80490bc:	66 90                	xchg   %ax,%ax
 80490be:	66 90                	xchg   %ax,%ax

080490c0 <deregister_tm_clones>:
 80490c0:	b8 74 c0 04 08       	mov    $0x804c074,%eax
 80490c5:	3d 74 c0 04 08       	cmp    $0x804c074,%eax
 80490ca:	74 24                	je     80490f0 <deregister_tm_clones+0x30>
 80490cc:	b8 00 00 00 00       	mov    $0x0,%eax
 80490d1:	85 c0                	test   %eax,%eax
 80490d3:	74 1b                	je     80490f0 <deregister_tm_clones+0x30>
 80490d5:	55                   	push   %ebp
 80490d6:	89 e5                	mov    %esp,%ebp
 80490d8:	83 ec 14             	sub    $0x14,%esp
 80490db:	68 74 c0 04 08       	push   $0x804c074
 80490e0:	ff d0                	call   *%eax
 80490e2:	83 c4 10             	add    $0x10,%esp
 80490e5:	c9                   	leave  
 80490e6:	c3                   	ret    
 80490e7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80490ee:	66 90                	xchg   %ax,%ax
 80490f0:	c3                   	ret    
 80490f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80490f8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80490ff:	90                   	nop

08049100 <register_tm_clones>:
 8049100:	b8 74 c0 04 08       	mov    $0x804c074,%eax
 8049105:	2d 74 c0 04 08       	sub    $0x804c074,%eax
 804910a:	89 c2                	mov    %eax,%edx
 804910c:	c1 e8 1f             	shr    $0x1f,%eax
 804910f:	c1 fa 02             	sar    $0x2,%edx
 8049112:	01 d0                	add    %edx,%eax
 8049114:	d1 f8                	sar    %eax
 8049116:	74 20                	je     8049138 <register_tm_clones+0x38>
 8049118:	ba 00 00 00 00       	mov    $0x0,%edx
 804911d:	85 d2                	test   %edx,%edx
 804911f:	74 17                	je     8049138 <register_tm_clones+0x38>
 8049121:	55                   	push   %ebp
 8049122:	89 e5                	mov    %esp,%ebp
 8049124:	83 ec 10             	sub    $0x10,%esp
 8049127:	50                   	push   %eax
 8049128:	68 74 c0 04 08       	push   $0x804c074
 804912d:	ff d2                	call   *%edx
 804912f:	83 c4 10             	add    $0x10,%esp
 8049132:	c9                   	leave  
 8049133:	c3                   	ret    
 8049134:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049138:	c3                   	ret    
 8049139:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08049140 <__do_global_dtors_aux>:
 8049140:	f3 0f 1e fb          	endbr32 
 8049144:	80 3d 74 c0 04 08 00 	cmpb   $0x0,0x804c074
 804914b:	75 1b                	jne    8049168 <__do_global_dtors_aux+0x28>
 804914d:	55                   	push   %ebp
 804914e:	89 e5                	mov    %esp,%ebp
 8049150:	83 ec 08             	sub    $0x8,%esp
 8049153:	e8 68 ff ff ff       	call   80490c0 <deregister_tm_clones>
 8049158:	c6 05 74 c0 04 08 01 	movb   $0x1,0x804c074
 804915f:	c9                   	leave  
 8049160:	c3                   	ret    
 8049161:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049168:	c3                   	ret    
 8049169:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08049170 <frame_dummy>:
 8049170:	f3 0f 1e fb          	endbr32 
 8049174:	eb 8a                	jmp    8049100 <register_tm_clones>

08049176 <main>:
 8049176:	55                   	push   %ebp
 8049177:	89 e5                	mov    %esp,%ebp
 8049179:	83 e4 f0             	and    $0xfffffff0,%esp
 804917c:	83 ec 10             	sub    $0x10,%esp
 804917f:	a1 70 c0 04 08       	mov    0x804c070,%eax
 8049184:	85 c0                	test   %eax,%eax
 8049186:	74 09                	je     8049191 <main+0x1b>
 8049188:	a1 70 c0 04 08       	mov    0x804c070,%eax
 804918d:	ff d0                	call   *%eax
 804918f:	eb 0c                	jmp    804919d <main+0x27>
 8049191:	c7 04 24 80 a0 04 08 	movl   $0x804a080,(%esp)
 8049198:	e8 a3 fe ff ff       	call   8049040 <puts@plt>
 804919d:	b8 00 00 00 00       	mov    $0x0,%eax
 80491a2:	c9                   	leave  
 80491a3:	c3                   	ret    

080491a4 <yqijDNagpx>:
 80491a4:	55                   	push   %ebp
 80491a5:	89 e5                	mov    %esp,%ebp
 80491a7:	90                   	nop
 80491a8:	90                   	nop
 80491a9:	90                   	nop
 80491aa:	90                   	nop
 80491ab:	90                   	nop
 80491ac:	90                   	nop
 80491ad:	90                   	nop
 80491ae:	90                   	nop
 80491af:	90                   	nop
 80491b0:	90                   	nop
 80491b1:	90                   	nop
 80491b2:	90                   	nop
 80491b3:	90                   	nop
 80491b4:	90                   	nop
 80491b5:	90                   	nop
 80491b6:	90                   	nop
 80491b7:	90                   	nop
 80491b8:	90                   	nop
 80491b9:	90                   	nop
 80491ba:	90                   	nop
 80491bb:	90                   	nop
 80491bc:	90                   	nop
 80491bd:	90                   	nop
 80491be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80491c3:	5d                   	pop    %ebp
 80491c4:	c3                   	ret    

080491c5 <do_phase>:
 80491c5:	55                   	push   %ebp
 80491c6:	89 e5                	mov    %esp,%ebp
 80491c8:	83 ec 38             	sub    $0x38,%esp
 80491cb:	c7 45 e6 46 44 4b 51 	movl   $0x514b4446,-0x1a(%ebp)
 80491d2:	c7 45 ea 5a 4f 4a 54 	movl   $0x544a4f5a,-0x16(%ebp)
 80491d9:	66 c7 45 ee 49 00    	movw   $0x49,-0x12(%ebp)
 80491df:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 80491e6:	e9 e0 00 00 00       	jmp    80492cb <do_phase+0x106>
 80491eb:	8d 55 e6             	lea    -0x1a(%ebp),%edx
 80491ee:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80491f1:	01 d0                	add    %edx,%eax
 80491f3:	0f b6 00             	movzbl (%eax),%eax
 80491f6:	88 45 f7             	mov    %al,-0x9(%ebp)
 80491f9:	0f be 45 f7          	movsbl -0x9(%ebp),%eax
 80491fd:	83 e8 41             	sub    $0x41,%eax
 8049200:	83 f8 19             	cmp    $0x19,%eax
 8049203:	0f 87 b0 00 00 00    	ja     80492b9 <do_phase+0xf4>
 8049209:	8b 04 85 f8 a0 04 08 	mov    0x804a0f8(,%eax,4),%eax
 8049210:	ff e0                	jmp    *%eax
 8049212:	c6 45 f7 69          	movb   $0x69,-0x9(%ebp)
 8049216:	e9 9e 00 00 00       	jmp    80492b9 <do_phase+0xf4>
 804921b:	c6 45 f7 6c          	movb   $0x6c,-0x9(%ebp)
 804921f:	e9 95 00 00 00       	jmp    80492b9 <do_phase+0xf4>
 8049224:	c6 45 f7 51          	movb   $0x51,-0x9(%ebp)
 8049228:	e9 8c 00 00 00       	jmp    80492b9 <do_phase+0xf4>
 804922d:	c6 45 f7 38          	movb   $0x38,-0x9(%ebp)
 8049231:	e9 83 00 00 00       	jmp    80492b9 <do_phase+0xf4>
 8049236:	c6 45 f7 36          	movb   $0x36,-0x9(%ebp)
 804923a:	eb 7d                	jmp    80492b9 <do_phase+0xf4>
 804923c:	c6 45 f7 56          	movb   $0x56,-0x9(%ebp)
 8049240:	eb 77                	jmp    80492b9 <do_phase+0xf4>
 8049242:	c6 45 f7 34          	movb   $0x34,-0x9(%ebp)
 8049246:	eb 71                	jmp    80492b9 <do_phase+0xf4>
 8049248:	c6 45 f7 46          	movb   $0x46,-0x9(%ebp)
 804924c:	eb 6b                	jmp    80492b9 <do_phase+0xf4>
 804924e:	c6 45 f7 35          	movb   $0x35,-0x9(%ebp)
 8049252:	eb 65                	jmp    80492b9 <do_phase+0xf4>
 8049254:	c6 45 f7 33          	movb   $0x33,-0x9(%ebp)
 8049258:	eb 5f                	jmp    80492b9 <do_phase+0xf4>
 804925a:	c6 45 f7 42          	movb   $0x42,-0x9(%ebp)
 804925e:	eb 59                	jmp    80492b9 <do_phase+0xf4>
 8049260:	c6 45 f7 7c          	movb   $0x7c,-0x9(%ebp)
 8049264:	eb 53                	jmp    80492b9 <do_phase+0xf4>
 8049266:	c6 45 f7 4f          	movb   $0x4f,-0x9(%ebp)
 804926a:	eb 4d                	jmp    80492b9 <do_phase+0xf4>
 804926c:	c6 45 f7 60          	movb   $0x60,-0x9(%ebp)
 8049270:	eb 47                	jmp    80492b9 <do_phase+0xf4>
 8049272:	c6 45 f7 48          	movb   $0x48,-0x9(%ebp)
 8049276:	eb 41                	jmp    80492b9 <do_phase+0xf4>
 8049278:	c6 45 f7 67          	movb   $0x67,-0x9(%ebp)
 804927c:	eb 3b                	jmp    80492b9 <do_phase+0xf4>
 804927e:	c6 45 f7 39          	movb   $0x39,-0x9(%ebp)
 8049282:	eb 35                	jmp    80492b9 <do_phase+0xf4>
 8049284:	c6 45 f7 78          	movb   $0x78,-0x9(%ebp)
 8049288:	eb 2f                	jmp    80492b9 <do_phase+0xf4>
 804928a:	c6 45 f7 30          	movb   $0x30,-0x9(%ebp)
 804928e:	eb 29                	jmp    80492b9 <do_phase+0xf4>
 8049290:	c6 45 f7 37          	movb   $0x37,-0x9(%ebp)
 8049294:	eb 23                	jmp    80492b9 <do_phase+0xf4>
 8049296:	c6 45 f7 3e          	movb   $0x3e,-0x9(%ebp)
 804929a:	eb 1d                	jmp    80492b9 <do_phase+0xf4>
 804929c:	c6 45 f7 3e          	movb   $0x3e,-0x9(%ebp)
 80492a0:	eb 17                	jmp    80492b9 <do_phase+0xf4>
 80492a2:	c6 45 f7 31          	movb   $0x31,-0x9(%ebp)
 80492a6:	eb 11                	jmp    80492b9 <do_phase+0xf4>
 80492a8:	c6 45 f7 75          	movb   $0x75,-0x9(%ebp)
 80492ac:	eb 0b                	jmp    80492b9 <do_phase+0xf4>
 80492ae:	c6 45 f7 71          	movb   $0x71,-0x9(%ebp)
 80492b2:	eb 05                	jmp    80492b9 <do_phase+0xf4>
 80492b4:	c6 45 f7 32          	movb   $0x32,-0x9(%ebp)
 80492b8:	90                   	nop
 80492b9:	8d 55 dc             	lea    -0x24(%ebp),%edx
 80492bc:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80492bf:	01 c2                	add    %eax,%edx
 80492c1:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
 80492c5:	88 02                	mov    %al,(%edx)
 80492c7:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 80492cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80492ce:	83 f8 08             	cmp    $0x8,%eax
 80492d1:	0f 86 14 ff ff ff    	jbe    80491eb <do_phase+0x26>
 80492d7:	8d 55 dc             	lea    -0x24(%ebp),%edx
 80492da:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80492dd:	01 d0                	add    %edx,%eax
 80492df:	c6 00 00             	movb   $0x0,(%eax)
 80492e2:	8d 45 dc             	lea    -0x24(%ebp),%eax
 80492e5:	89 04 24             	mov    %eax,(%esp)
 80492e8:	e8 53 fd ff ff       	call   8049040 <puts@plt>
 80492ed:	c9                   	leave  
 80492ee:	c3                   	ret    
 80492ef:	90                   	nop

080492f0 <__libc_csu_init>:
 80492f0:	f3 0f 1e fb          	endbr32 
 80492f4:	55                   	push   %ebp
 80492f5:	e8 6b 00 00 00       	call   8049365 <__x86.get_pc_thunk.bp>
 80492fa:	81 c5 06 2d 00 00    	add    $0x2d06,%ebp
 8049300:	57                   	push   %edi
 8049301:	56                   	push   %esi
 8049302:	53                   	push   %ebx
 8049303:	83 ec 0c             	sub    $0xc,%esp
 8049306:	89 eb                	mov    %ebp,%ebx
 8049308:	8b 7c 24 28          	mov    0x28(%esp),%edi
 804930c:	e8 ef fc ff ff       	call   8049000 <_init>
 8049311:	8d 9d 10 ff ff ff    	lea    -0xf0(%ebp),%ebx
 8049317:	8d 85 0c ff ff ff    	lea    -0xf4(%ebp),%eax
 804931d:	29 c3                	sub    %eax,%ebx
 804931f:	c1 fb 02             	sar    $0x2,%ebx
 8049322:	74 29                	je     804934d <__libc_csu_init+0x5d>
 8049324:	31 f6                	xor    %esi,%esi
 8049326:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804932d:	8d 76 00             	lea    0x0(%esi),%esi
 8049330:	83 ec 04             	sub    $0x4,%esp
 8049333:	57                   	push   %edi
 8049334:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049338:	ff 74 24 2c          	pushl  0x2c(%esp)
 804933c:	ff 94 b5 0c ff ff ff 	call   *-0xf4(%ebp,%esi,4)
 8049343:	83 c6 01             	add    $0x1,%esi
 8049346:	83 c4 10             	add    $0x10,%esp
 8049349:	39 f3                	cmp    %esi,%ebx
 804934b:	75 e3                	jne    8049330 <__libc_csu_init+0x40>
 804934d:	83 c4 0c             	add    $0xc,%esp
 8049350:	5b                   	pop    %ebx
 8049351:	5e                   	pop    %esi
 8049352:	5f                   	pop    %edi
 8049353:	5d                   	pop    %ebp
 8049354:	c3                   	ret    
 8049355:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804935c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08049360 <__libc_csu_fini>:
 8049360:	f3 0f 1e fb          	endbr32 
 8049364:	c3                   	ret    

08049365 <__x86.get_pc_thunk.bp>:
 8049365:	8b 2c 24             	mov    (%esp),%ebp
 8049368:	c3                   	ret    

Disassembly of section .fini:

0804936c <_fini>:
 804936c:	f3 0f 1e fb          	endbr32 
 8049370:	53                   	push   %ebx
 8049371:	83 ec 08             	sub    $0x8,%esp
 8049374:	e8 37 fd ff ff       	call   80490b0 <__x86.get_pc_thunk.bx>
 8049379:	81 c3 87 2c 00 00    	add    $0x2c87,%ebx
 804937f:	83 c4 08             	add    $0x8,%esp
 8049382:	5b                   	pop    %ebx
 8049383:	c3                   	ret    

Disassembly of section .rodata:

0804a000 <_fp_hw>:
 804a000:	03 00                	add    (%eax),%eax
	...

0804a004 <_IO_stdin_used>:
 804a004:	01 00                	add    %eax,(%eax)
 804a006:	02 00                	add    (%eax),%al
	...

0804a020 <RaMbXt>:
 804a020:	60                   	pusha  
 804a021:	d9 01                	flds   (%ecx)
 804a023:	29 01                	sub    %eax,(%ecx)
 804a025:	94                   	xchg   %eax,%esp
 804a026:	0d 60 67 2a 15       	or     $0x152a6760,%eax
 804a02b:	d0 4a 00             	rorb   0x0(%edx)
 804a02e:	41                   	inc    %ecx
 804a02f:	ef                   	out    %eax,(%dx)
 804a030:	e4 99                	in     $0x99,%al
 804a032:	f4                   	hlt    
 804a033:	07                   	pop    %es
 804a034:	7f d3                	jg     804a009 <_IO_stdin_used+0x5>
 804a036:	7f 43                	jg     804a07b <challenge+0xb>
 804a038:	b4 28                	mov    $0x28,%ah
 804a03a:	f9                   	stc    
 804a03b:	0d 98 0d 55 23       	or     $0x23550d98,%eax
 804a040:	84 f5                	test   %dh,%ch
 804a042:	b9 c6 eb b8 27       	mov    $0x27b8ebc6,%ecx
 804a047:	e7 6d                	out    %eax,$0x6d
 804a049:	a8 f1                	test   $0xf1,%al
 804a04b:	99                   	cltd   
 804a04c:	70 ea                	jo     804a038 <RaMbXt+0x18>
 804a04e:	05 02 68 1e af       	add    $0xaf1e6802,%eax
 804a053:	8d 39                	lea    (%ecx),%edi
 804a055:	48                   	dec    %eax
 804a056:	05 d1 fc 4e 0b       	add    $0xb4efcd1,%eax
 804a05b:	1d db 0e be c6       	sbb    $0xc6be0edb,%eax
 804a060:	67 83 07 b5          	addl   $0xffffffb5,(%bx)
 804a064:	36 12 bd f7 75 33 c2 	adc    %ss:-0x3dcc8a09(%ebp),%bh
 804a06b:	3c 7b                	cmp    $0x7b,%al
 804a06d:	ad                   	lods   %ds:(%esi),%eax
 804a06e:	be d8          	mov    $0x667573d8,%esi

0804a070 <challenge>:
 804a070:	73 75                	jae    804a0e7 <challenge+0x77>
 804a072:	66 40                	inc    %ax
 804a074:	6e                   	outsb  %ds:(%esi),(%dx)
 804a075:	6a 75                	push   $0x75
 804a077:	2e 65 64 75 2e       	cs gs fs jne,pn 804a0aa <challenge+0x3a>
 804a07c:	63 6e 00             	arpl   %bp,0x0(%esi)
 804a07f:	00 57 65             	add    %dl,0x65(%edi)
 804a082:	6c                   	insb   (%dx),%es:(%edi)
 804a083:	63 6f 6d             	arpl   %bp,0x6d(%edi)
 804a086:	65 20 74 6f 20       	and    %dh,%gs:0x20(%edi,%ebp,2)
 804a08b:	74 68                	je     804a0f5 <challenge+0x85>
 804a08d:	69 73 20 73 6d 61 6c 	imul   $0x6c616d73,0x20(%ebx),%esi
 804a094:	6c                   	insb   (%dx),%es:(%edi)
 804a095:	20 6c 61 62          	and    %ch,0x62(%ecx,%eiz,2)
 804a099:	20 6f 66             	and    %ch,0x66(%edi)
 804a09c:	20 6c 69 6e          	and    %ch,0x6e(%ecx,%ebp,2)
 804a0a0:	6b 69 6e 67          	imul   $0x67,0x6e(%ecx),%ebp
 804a0a4:	2e 20 54 6f 20       	and    %dl,%cs:0x20(%edi,%ebp,2)
 804a0a9:	62 65 67             	bound  %esp,0x67(%ebp)
 804a0ac:	69 6e 20 6c 61 62 2c 	imul   $0x2c62616c,0x20(%esi),%ebp
 804a0b3:	20 70 6c             	and    %dh,0x6c(%eax)
 804a0b6:	65 61                	gs popa 
 804a0b8:	73 65                	jae    804a11f <challenge+0xaf>
 804a0ba:	20 6c 69 6e          	and    %ch,0x6e(%ecx,%ebp,2)
 804a0be:	6b 20 74             	imul   $0x74,(%eax),%esp
 804a0c1:	68 65 20 72 65       	push   $0x65722065
 804a0c6:	6c                   	insb   (%dx),%es:(%edi)
 804a0c7:	65 76 61             	gs jbe 804a12b <challenge+0xbb>
 804a0ca:	6e                   	outsb  %ds:(%esi),(%dx)
 804a0cb:	74 20                	je     804a0ed <challenge+0x7d>
 804a0cd:	6f                   	outsl  %ds:(%esi),(%dx)
 804a0ce:	62 6a 65             	bound  %ebp,0x65(%edx)
 804a0d1:	63 74 20 6d          	arpl   %si,0x6d(%eax,%eiz,1)
 804a0d5:	6f                   	outsl  %ds:(%esi),(%dx)
 804a0d6:	64 75 6c             	fs jne 804a145 <challenge+0xd5>
 804a0d9:	65 28 73 29          	sub    %dh,%gs:0x29(%ebx)
 804a0dd:	20 77 69             	and    %dh,0x69(%edi)
 804a0e0:	74 68                	je     804a14a <challenge+0xda>
 804a0e2:	20 74 68 65          	and    %dh,0x65(%eax,%ebp,2)
 804a0e6:	20 6d 61             	and    %ch,0x61(%ebp)
 804a0e9:	69 6e 20 6d 6f 64 75 	imul   $0x75646f6d,0x20(%esi),%ebp
 804a0f0:	6c                   	insb   (%dx),%es:(%edi)
 804a0f1:	65 2e 00 34 00       	gs add %dh,%cs:(%eax,%eax,1)
 804a0f6:	00 00                	add    %al,(%eax)
 804a0f8:	3c 92                	cmp    $0x92,%al
 804a0fa:	04 08                	add    $0x8,%al
 804a0fc:	1b 92 04 08 6c 92    	sbb    -0x6d93f7fc(%edx),%edx
 804a102:	04 08                	add    $0x8,%al
 804a104:	b4 92                	mov    $0x92,%ah
 804a106:	04 08                	add    $0x8,%al
 804a108:	96                   	xchg   %eax,%esi
 804a109:	92                   	xchg   %eax,%edx
 804a10a:	04 08                	add    $0x8,%al
 804a10c:	b4 92                	mov    $0x92,%ah
 804a10e:	04 08                	add    $0x8,%al
 804a110:	54                   	push   %esp
 804a111:	92                   	xchg   %eax,%edx
 804a112:	04 08                	add    $0x8,%al
 804a114:	66 92                	xchg   %ax,%dx
 804a116:	04 08                	add    $0x8,%al
 804a118:	b4 92                	mov    $0x92,%ah
 804a11a:	04 08                	add    $0x8,%al
 804a11c:	a2 92 04 08 a2       	mov    %al,0xa2080492
 804a121:	92                   	xchg   %eax,%edx
 804a122:	04 08                	add    $0x8,%al
 804a124:	2d 92 04 08 12       	sub    $0x12080492,%eax
 804a129:	92                   	xchg   %eax,%edx
 804a12a:	04 08                	add    $0x8,%al
 804a12c:	5a                   	pop    %edx
 804a12d:	92                   	xchg   %eax,%edx
 804a12e:	04 08                	add    $0x8,%al
 804a130:	8a 92 04 08 78 92    	mov    -0x6d87f7fc(%edx),%dl
 804a136:	04 08                	add    $0x8,%al
 804a138:	b4 92                	mov    $0x92,%ah
 804a13a:	04 08                	add    $0x8,%al
 804a13c:	60                   	pusha  
 804a13d:	92                   	xchg   %eax,%edx
 804a13e:	04 08                	add    $0x8,%al
 804a140:	a2 92 04 08 54       	mov    %al,0x54080492
 804a145:	92                   	xchg   %eax,%edx
 804a146:	04 08                	add    $0x8,%al
 804a148:	72 92                	jb     804a0dc <challenge+0x6c>
 804a14a:	04 08                	add    $0x8,%al
 804a14c:	4e                   	dec    %esi
 804a14d:	92                   	xchg   %eax,%edx
 804a14e:	04 08                	add    $0x8,%al
 804a150:	24 92                	and    $0x92,%al
 804a152:	04 08                	add    $0x8,%al
 804a154:	9c                   	pushf  
 804a155:	92                   	xchg   %eax,%edx
 804a156:	04 08                	add    $0x8,%al
 804a158:	36 92                	ss xchg %eax,%edx
 804a15a:	04 08                	add    $0x8,%al
 804a15c:	b4 92                	mov    $0x92,%ah
 804a15e:	04 08                	add    $0x8,%al

Disassembly of section .eh_frame_hdr:

0804a160 <__GNU_EH_FRAME_HDR>:
 804a160:	01 1b                	add    %ebx,(%ebx)
 804a162:	03 3b                	add    (%ebx),%edi
 804a164:	50                   	push   %eax
 804a165:	00 00                	add    %al,(%eax)
 804a167:	00 09                	add    %cl,(%ecx)
 804a169:	00 00                	add    %al,(%eax)
 804a16b:	00 d0                	add    %dl,%al
 804a16d:	ee                   	out    %al,(%dx)
 804a16e:	ff                   	(bad)  
 804a16f:	ff 94 00 00 00 00 ef 	call   *-0x11000000(%eax,%eax,1)
 804a176:	ff                   	(bad)  
 804a177:	ff 6c 00 00          	ljmp   *0x0(%eax,%eax,1)
 804a17b:	00 40 ef             	add    %al,-0x11(%eax)
 804a17e:	ff                   	(bad)  
 804a17f:	ff 80 00 00 00 16    	incl   0x16000000(%eax)
 804a185:	f0 ff                	lock (bad) 
 804a187:	ff                   	(bad)  
 804a188:	b8 00 00 00 44       	mov    $0x44000000,%eax
 804a18d:	f0 ff                	lock (bad) 
 804a18f:	ff                   	(bad)  
 804a190:	d8 00                	fadds  (%eax)
 804a192:	00 00                	add    %al,(%eax)
 804a194:	65 f0 ff             	gs lock (bad) 
 804a197:	ff                   	(bad)  
 804a198:	f8                   	clc    
 804a199:	00 00                	add    %al,(%eax)
 804a19b:	00 90 f1 ff ff 18    	add    %dl,0x18fffff1(%eax)
 804a1a1:	01 00                	add    %eax,(%eax)
 804a1a3:	00 00                	add    %al,(%eax)
 804a1a5:	f2 ff                	repnz (bad) 
 804a1a7:	ff 64 01 00          	jmp    *0x0(%ecx,%eax,1)
 804a1ab:	00 05 f2 ff ff 78    	add    %al,0x78fffff2
 804a1b1:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .eh_frame:

0804a1b4 <__FRAME_END__-0x138>:
 804a1b4:	14 00                	adc    $0x0,%al
 804a1b6:	00 00                	add    %al,(%eax)
 804a1b8:	00 00                	add    %al,(%eax)
 804a1ba:	00 00                	add    %al,(%eax)
 804a1bc:	01 7a 52             	add    %edi,0x52(%edx)
 804a1bf:	00 01                	add    %al,(%ecx)
 804a1c1:	7c 08                	jl     804a1cb <__GNU_EH_FRAME_HDR+0x6b>
 804a1c3:	01 1b                	add    %ebx,(%ebx)
 804a1c5:	0c 04                	or     $0x4,%al
 804a1c7:	04 88                	add    $0x88,%al
 804a1c9:	01 00                	add    %eax,(%eax)
 804a1cb:	00 10                	add    %dl,(%eax)
 804a1cd:	00 00                	add    %al,(%eax)
 804a1cf:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804a1d2:	00 00                	add    %al,(%eax)
 804a1d4:	8c ee                	mov    %gs,%esi
 804a1d6:	ff                   	(bad)  
 804a1d7:	ff                   	(bad)  
 804a1d8:	3b 00                	cmp    (%eax),%eax
 804a1da:	00 00                	add    %al,(%eax)
 804a1dc:	00 44 07 08          	add    %al,0x8(%edi,%eax,1)
 804a1e0:	10 00                	adc    %al,(%eax)
 804a1e2:	00 00                	add    %al,(%eax)
 804a1e4:	30 00                	xor    %al,(%eax)
 804a1e6:	00 00                	add    %al,(%eax)
 804a1e8:	b8 ee ff ff 05       	mov    $0x5ffffee,%eax
 804a1ed:	00 00                	add    %al,(%eax)
 804a1ef:	00 00                	add    %al,(%eax)
 804a1f1:	00 00                	add    %al,(%eax)
 804a1f3:	00 20                	add    %ah,(%eax)
 804a1f5:	00 00                	add    %al,(%eax)
 804a1f7:	00 44 00 00          	add    %al,0x0(%eax,%eax,1)
 804a1fb:	00 34 ee             	add    %dh,(%esi,%ebp,8)
 804a1fe:	ff                   	(bad)  
 804a1ff:	ff 30                	pushl  (%eax)
 804a201:	00 00                	add    %al,(%eax)
 804a203:	00 00                	add    %al,(%eax)
 804a205:	0e                   	push   %cs
 804a206:	08 46 0e             	or     %al,0xe(%esi)
 804a209:	0c 4a                	or     $0x4a,%al
 804a20b:	0f 0b                	ud2    
 804a20d:	74 04                	je     804a213 <__GNU_EH_FRAME_HDR+0xb3>
 804a20f:	78 00                	js     804a211 <__GNU_EH_FRAME_HDR+0xb1>
 804a211:	3f                   	aas    
 804a212:	1a 3b                	sbb    (%ebx),%bh
 804a214:	2a 32                	sub    (%edx),%dh
 804a216:	24 22                	and    $0x22,%al
 804a218:	1c 00                	sbb    $0x0,%al
 804a21a:	00 00                	add    %al,(%eax)
 804a21c:	68 00 00 00 56       	push   $0x56000000
 804a221:	ef                   	out    %eax,(%dx)
 804a222:	ff                   	(bad)  
 804a223:	ff 2e                	ljmp   *(%esi)
 804a225:	00 00                	add    %al,(%eax)
 804a227:	00 00                	add    %al,(%eax)
 804a229:	41                   	inc    %ecx
 804a22a:	0e                   	push   %cs
 804a22b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804a231:	6a c5                	push   $0xffffffc5
 804a233:	0c 04                	or     $0x4,%al
 804a235:	04 00                	add    $0x0,%al
 804a237:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804a23a:	00 00                	add    %al,(%eax)
 804a23c:	88 00                	mov    %al,(%eax)
 804a23e:	00 00                	add    %al,(%eax)
 804a240:	64 ef                	fs out %eax,(%dx)
 804a242:	ff                   	(bad)  
 804a243:	ff 21                	jmp    *(%ecx)
 804a245:	00 00                	add    %al,(%eax)
 804a247:	00 00                	add    %al,(%eax)
 804a249:	41                   	inc    %ecx
 804a24a:	0e                   	push   %cs
 804a24b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804a251:	5d                   	pop    %ebp
 804a252:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 804a255:	04 00                	add    $0x0,%al
 804a257:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804a25a:	00 00                	add    %al,(%eax)
 804a25c:	a8 00                	test   $0x0,%al
 804a25e:	00 00                	add    %al,(%eax)
 804a260:	65 ef                	gs out %eax,(%dx)
 804a262:	ff                   	(bad)  
 804a263:	ff 2a                	ljmp   *(%edx)
 804a265:	01 00                	add    %eax,(%eax)
 804a267:	00 00                	add    %al,(%eax)
 804a269:	41                   	inc    %ecx
 804a26a:	0e                   	push   %cs
 804a26b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804a271:	03 26                	add    (%esi),%esp
 804a273:	01 c5                	add    %eax,%ebp
 804a275:	0c 04                	or     $0x4,%al
 804a277:	04 48                	add    $0x48,%al
 804a279:	00 00                	add    %al,(%eax)
 804a27b:	00 c8                	add    %cl,%al
 804a27d:	00 00                	add    %al,(%eax)
 804a27f:	00 70 f0             	add    %dh,-0x10(%eax)
 804a282:	ff                   	(bad)  
 804a283:	ff 65 00             	jmp    *0x0(%ebp)
 804a286:	00 00                	add    %al,(%eax)
 804a288:	00 45 0e             	add    %al,0xe(%ebp)
 804a28b:	08 85 02 4c 0e 0c    	or     %al,0xc0e4c02(%ebp)
 804a291:	87 03                	xchg   %eax,(%ebx)
 804a293:	41                   	inc    %ecx
 804a294:	0e                   	push   %cs
 804a295:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804a29b:	83 05 43 0e 20 6d 0e 	addl   $0xe,0x6d200e43
 804a2a2:	24 41                	and    $0x41,%al
 804a2a4:	0e                   	push   %cs
 804a2a5:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 804a2a9:	44                   	inc    %esp
 804a2aa:	0e                   	push   %cs
 804a2ab:	30 4d 0e             	xor    %cl,0xe(%ebp)
 804a2ae:	20 47 0e             	and    %al,0xe(%edi)
 804a2b1:	14 41                	adc    $0x41,%al
 804a2b3:	c3                   	ret    
 804a2b4:	0e                   	push   %cs
 804a2b5:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804a2b8:	0e                   	push   %cs
 804a2b9:	0c 41                	or     $0x41,%al
 804a2bb:	c7                   	(bad)  
 804a2bc:	0e                   	push   %cs
 804a2bd:	08 41 c5             	or     %al,-0x3b(%ecx)
 804a2c0:	0e                   	push   %cs
 804a2c1:	04 00                	add    $0x0,%al
 804a2c3:	00 10                	add    %dl,(%eax)
 804a2c5:	00 00                	add    %al,(%eax)
 804a2c7:	00 14 01             	add    %dl,(%ecx,%eax,1)
 804a2ca:	00 00                	add    %al,(%eax)
 804a2cc:	94                   	xchg   %eax,%esp
 804a2cd:	f0 ff                	lock (bad) 
 804a2cf:	ff 05 00 00 00 00    	incl   0x0
 804a2d5:	00 00                	add    %al,(%eax)
 804a2d7:	00 10                	add    %dl,(%eax)
 804a2d9:	00 00                	add    %al,(%eax)
 804a2db:	00 28                	add    %ch,(%eax)
 804a2dd:	01 00                	add    %eax,(%eax)
 804a2df:	00 85 f0 ff ff 04    	add    %al,0x4fffff0(%ebp)
 804a2e5:	00 00                	add    %al,(%eax)
 804a2e7:	00 00                	add    %al,(%eax)
 804a2e9:	00 00                	add    %al,(%eax)
	...

0804a2ec <__FRAME_END__>:
 804a2ec:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

0804bf0c <__frame_dummy_init_array_entry>:
 804bf0c:	70 91                	jo     804be9f <__FRAME_END__+0x1bb3>
 804bf0e:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

0804bf10 <__do_global_dtors_aux_fini_array_entry>:
 804bf10:	40                   	inc    %eax
 804bf11:	91                   	xchg   %eax,%ecx
 804bf12:	04 08                	add    $0x8,%al

Disassembly of section .dynamic:

0804bf14 <_DYNAMIC>:
 804bf14:	01 00                	add    %eax,(%eax)
 804bf16:	00 00                	add    %al,(%eax)
 804bf18:	01 00                	add    %eax,(%eax)
 804bf1a:	00 00                	add    %al,(%eax)
 804bf1c:	0c 00                	or     $0x0,%al
 804bf1e:	00 00                	add    %al,(%eax)
 804bf20:	00 90 04 08 0d 00    	add    %dl,0xd0804(%eax)
 804bf26:	00 00                	add    %al,(%eax)
 804bf28:	6c                   	insb   (%dx),%es:(%edi)
 804bf29:	93                   	xchg   %eax,%ebx
 804bf2a:	04 08                	add    $0x8,%al
 804bf2c:	19 00                	sbb    %eax,(%eax)
 804bf2e:	00 00                	add    %al,(%eax)
 804bf30:	0c bf                	or     $0xbf,%al
 804bf32:	04 08                	add    $0x8,%al
 804bf34:	1b 00                	sbb    (%eax),%eax
 804bf36:	00 00                	add    %al,(%eax)
 804bf38:	04 00                	add    $0x0,%al
 804bf3a:	00 00                	add    %al,(%eax)
 804bf3c:	1a 00                	sbb    (%eax),%al
 804bf3e:	00 00                	add    %al,(%eax)
 804bf40:	10 bf 04 08 1c 00    	adc    %bh,0x1c0804(%edi)
 804bf46:	00 00                	add    %al,(%eax)
 804bf48:	04 00                	add    $0x0,%al
 804bf4a:	00 00                	add    %al,(%eax)
 804bf4c:	f5                   	cmc    
 804bf4d:	fe                   	(bad)  
 804bf4e:	ff 6f ec             	ljmp   *-0x14(%edi)
 804bf51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 804bf58:	5c                   	pop    %esp
 804bf59:	82 04 08 06          	addb   $0x6,(%eax,%ecx,1)
 804bf5d:	00 00                	add    %al,(%eax)
 804bf5f:	00 0c 82             	add    %cl,(%edx,%eax,4)
 804bf62:	04 08                	add    $0x8,%al
 804bf64:	0a 00                	or     (%eax),%al
 804bf66:	00 00                	add    %al,(%eax)
 804bf68:	4a                   	dec    %edx
 804bf69:	00 00                	add    %al,(%eax)
 804bf6b:	00 0b                	add    %cl,(%ebx)
 804bf6d:	00 00                	add    %al,(%eax)
 804bf6f:	00 10                	add    %dl,(%eax)
 804bf71:	00 00                	add    %al,(%eax)
 804bf73:	00 15 00 00 00 00    	add    %dl,0x0
 804bf79:	00 00                	add    %al,(%eax)
 804bf7b:	00 03                	add    %al,(%ebx)
 804bf7d:	00 00                	add    %al,(%eax)
 804bf7f:	00 00                	add    %al,(%eax)
 804bf81:	c0 04 08 02          	rolb   $0x2,(%eax,%ecx,1)
 804bf85:	00 00                	add    %al,(%eax)
 804bf87:	00 10                	add    %dl,(%eax)
 804bf89:	00 00                	add    %al,(%eax)
 804bf8b:	00 14 00             	add    %dl,(%eax,%eax,1)
 804bf8e:	00 00                	add    %al,(%eax)
 804bf90:	11 00                	adc    %eax,(%eax)
 804bf92:	00 00                	add    %al,(%eax)
 804bf94:	17                   	pop    %ss
 804bf95:	00 00                	add    %al,(%eax)
 804bf97:	00 d8                	add    %bl,%al
 804bf99:	82 04 08 11          	addb   $0x11,(%eax,%ecx,1)
 804bf9d:	00 00                	add    %al,(%eax)
 804bf9f:	00 d0                	add    %dl,%al
 804bfa1:	82 04 08 12          	addb   $0x12,(%eax,%ecx,1)
 804bfa5:	00 00                	add    %al,(%eax)
 804bfa7:	00 08                	add    %cl,(%eax)
 804bfa9:	00 00                	add    %al,(%eax)
 804bfab:	00 13                	add    %dl,(%ebx)
 804bfad:	00 00                	add    %al,(%eax)
 804bfaf:	00 08                	add    %cl,(%eax)
 804bfb1:	00 00                	add    %al,(%eax)
 804bfb3:	00 fe                	add    %bh,%dh
 804bfb5:	ff                   	(bad)  
 804bfb6:	ff 6f b0             	ljmp   *-0x50(%edi)
 804bfb9:	82 04 08 ff          	addb   $0xff,(%eax,%ecx,1)
 804bfbd:	ff                   	(bad)  
 804bfbe:	ff 6f 01             	ljmp   *0x1(%edi)
 804bfc1:	00 00                	add    %al,(%eax)
 804bfc3:	00 f0                	add    %dh,%al
 804bfc5:	ff                   	(bad)  
 804bfc6:	ff 6f a6             	ljmp   *-0x5a(%edi)
 804bfc9:	82 04 08 00          	addb   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got:

0804bffc <.got>:
 804bffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804c000 <_GLOBAL_OFFSET_TABLE_>:
 804c000:	14 bf                	adc    $0xbf,%al
 804c002:	04 08                	add    $0x8,%al
	...
 804c00c:	46                   	inc    %esi
 804c00d:	90                   	nop
 804c00e:	04 08                	add    $0x8,%al
 804c010:	56                   	push   %esi
 804c011:	90                   	nop
 804c012:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804c020 <__data_start>:
 804c020:	00 00                	add    %al,(%eax)
	...

0804c024 <__dso_handle>:
	...

0804c040 <lDXwrV>:
 804c040:	74 3d                	je     804c07f <_end+0x7>
 804c042:	b3 85                	mov    $0x85,%bl
 804c044:	d1 69 46             	shrl   0x46(%ecx)
 804c047:	ae                   	scas   %es:(%edi),%al
 804c048:	e5 bf                	in     $0xbf,%eax
 804c04a:	88 6b 82             	mov    %ch,-0x7e(%ebx)
 804c04d:	56                   	push   %esi
 804c04e:	0a bb f6 15 8d 5f    	or     0x5f8d15f6(%ebx),%bh
 804c054:	1b 5f fd             	sbb    -0x3(%edi),%ebx
 804c057:	09 05 f7 cb 4c 16    	or     %eax,0x164ccbf7
 804c05d:	03 90 63 e4 c1 96    	add    -0x693e1b9d(%eax),%edx
 804c063:	9a a0 d0 95 53 9d b3 	lcall  $0xb39d,$0x5395d0a0
 804c06a:	7f 5f                	jg     804c0cb <_end+0x53>

0804c06c <phase_id>:
 804c06c:	f4                   	hlt    
 804c06d:	a0 04 08         	mov    0x91c50804,%al

0804c070 <phase>:
 804c070:	c5                   	.byte 0xc5
 804c071:	91                   	xchg   %eax,%ecx
 804c072:	04 08                	add    $0x8,%al

Disassembly of section .bss:

0804c074 <completed.7623>:
 804c074:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048f88>
   a:	74 75                	je     81 <_init-0x8048f7f>
   c:	20 39                	and    %bh,(%ecx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0x8048f71>
  1a:	31 7e 32             	xor    %edi,0x32(%esi)
  1d:	30 2e                	xor    %ch,(%esi)
  1f:	30 34 2e             	xor    %dh,(%esi,%ebp,1)
  22:	32 29                	xor    (%ecx),%ch
  24:	20 39                	and    %bh,(%ecx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%eax)
  2b:	47                   	inc    %edi
  2c:	43                   	inc    %ebx
  2d:	43                   	inc    %ebx
  2e:	3a 20                	cmp    (%eax),%ah
  30:	28 47 4e             	sub    %al,0x4e(%edi)
  33:	55                   	push   %ebp
  34:	29 20                	sub    %esp,(%eax)
  36:	34 2e                	xor    $0x2e,%al
  38:	38 2e                	cmp    %ch,(%esi)
  3a:	35 20 32 30 31       	xor    $0x31303220,%eax
  3f:	35 30 36 32 33       	xor    $0x33323630,%eax
  44:	20 28                	and    %ch,(%eax)
  46:	52                   	push   %edx
  47:	65 64 20 48 61       	gs and %cl,%fs:0x61(%eax)
  4c:	74 20                	je     6e <_init-0x8048f92>
  4e:	34 2e                	xor    $0x2e,%al
  50:	38 2e                	cmp    %ch,(%esi)
  52:	35 2d 34 34 29       	xor    $0x2934342d,%eax
	...
